{"version":3,"sources":["components/Navigation.js","components/Header.js","components/Album.js","components/AlbumList.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","className","to","exact","Header","props","id","Album","artist","title","year","href","rymLink","target","rel","src","alt","cover","AlbumList","state","search","handleRandomButtonClick","albums","todaysAlbum","Math","floor","random","length","today","key","setState","amount","handleSearchChange","e","val","value","console","log","this","time","album","map","indexOf","photoLink","index","filter","parseInt","RegExp","toLowerCase","includes","type","name","onChange","placeholder","icon","faSearch","onClick","faDice","Component","Footer","App","allRoutes","basename","process","path","fetch","then","response","json","data","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43ff3e49.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => (\r\n    <>\r\n        <nav>\r\n            <ul className='naviList'>\r\n                <li><NavLink to='/' exact>show all</NavLink></li>\r\n                <li><NavLink to='/60s'>60s</NavLink></li>\r\n                <li><NavLink to='/70s'>70s</NavLink></li>\r\n                <li><NavLink to='/80s'>80s</NavLink></li>\r\n                <li><NavLink to='/90s'>90s</NavLink></li>\r\n                <li><NavLink to='/00s'>00s</NavLink></li>\r\n                <li><NavLink to='/10s'>10s</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </>\r\n)\r\n\r\nexport default Navigation","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport '../styles/header.sass'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div id=\"header\">\r\n            <div id=\"headerImageContainer\">\r\n                {/* image container */}\r\n            </div>\r\n            <div id=\"headerTextContainer\">\r\n                <Navigation />\r\n                <h1>My<br />music</h1>\r\n                <p>albums from my jukebox</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../styles/Album.sass'\r\n\r\nconst Album = props => (\r\n    <div className='album'>\r\n        <ul>\r\n            <li><h5>artist: </h5> <h4> {props.artist}</h4></li>\r\n            <li><h5>title: </h5> <h4> {props.title}</h4></li>\r\n            <li><h5>year: </h5> <h4> {props.year}</h4></li>\r\n\r\n        </ul>\r\n        <a href={props.rymLink} target='_blank' rel=\"noopener noreferrer\"><img src=\"https://e.snmc.io/3.0/img/logo/sonemic-512.png\" alt=\"\" /></a>\r\n        <div className='img'>\r\n            <img src={props.cover} alt=\"\" />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Album;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Album from './Album';\r\nimport '../styles/AlbumList.sass';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDice } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass AlbumList extends Component {\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    handleRandomButtonClick = () => {\r\n        let albums = [...this.props.albums];\r\n        let index = Math.floor(Math.random() * albums.length);\r\n        let todaysAlbum = albums[index];\r\n        const today = <Album key={1} artist={todaysAlbum.artist} title={todaysAlbum.title} year={todaysAlbum.year} cover={todaysAlbum.cover} rymLink={todaysAlbum.rymLink} />;\r\n\r\n        this.setState({\r\n            albums: today,\r\n            amount: 1,\r\n        })\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        let val = e.target.value;\r\n        this.setState({\r\n            search: val\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.search);\r\n    }\r\n\r\n    render() {\r\n        const { albums, time } = this.props\r\n        let album = [];\r\n        let amount = album.length\r\n        if (this.state.search === '') {\r\n            if (time === 'all') {\r\n                album = albums.map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            } else if (time === 'today') {\r\n                let index = Math.floor(Math.random() * albums.length);\r\n                album = albums.filter(album => albums.indexOf(album) === index).map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            } else {\r\n                album = albums.filter(album => album.year >= time && album.year < parseInt(time) + 10).map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            }\r\n        } else {\r\n            const reg = new RegExp(this.state.search, \"gim\")\r\n            album = albums.filter(album => album.artist.toLowerCase().includes(this.state.search.toLowerCase()) || album.title.toLowerCase().includes(this.state.search.toLowerCase()) || album.year.toLowerCase().includes(this.state.search.toLowerCase())).map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n        }\r\n        amount = album.length\r\n        return (\r\n            <div>\r\n                <div className='randomAmount'>\r\n                    <div className='amount info'>\r\n                        Number: {amount}\r\n                    </div>\r\n                    <form className=\"search info\">\r\n                        <input type=\"text\" name=\"search\" onChange={this.handleSearchChange} placeholder=\"search\"></input>\r\n                        <span><FontAwesomeIcon icon={faSearch} /></span>\r\n                    </form>\r\n                    <div className='random info' onClick={amount === 1 ? this.handleRandomButtonClick : null}><NavLink to='/today'>\r\n                        Today You will listen: <span><FontAwesomeIcon icon={faDice} /></span>\r\n                    </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className='albumList'>\r\n                    {album}\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumList;","import React from 'react';\r\nimport '../styles/Footer.sass';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='follow'>\r\n            <div>\r\n                <h3>Follow me on Rate Your Music:</h3>\r\n                <a href=\"https://rateyourmusic.com/~DaveMusta\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src=\"https://e.snmc.io/3.0/img/logo/sonemic-512.png\" alt=\"\" />\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <h3>Follow me on GitHub:</h3>\r\n                <a href=\"https://github.com/Morswin19\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src=\"https://img.pngio.com/github-logo-icon-of-glyph-style-available-in-svg-png-eps-ai-github-icon-png-256_256.png\" alt=\"\" />\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <h3>Follow me on Facebook:</h3>\r\n                <a href=\"https://www.facebook.com/jedenkawalek/\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Facebook_Icon_%28Single_Path_-_Transparent_%22f%22%29.svg/1200px-Facebook_Icon_%28Single_Path_-_Transparent_%22f%22%29.svg.png\" alt=\"\" />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport AlbumList from './AlbumList'\r\nimport Footer from './Footer'\r\nimport '../styles/App.sass'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    albums: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://raw.githubusercontent.com/Morswin19/my-albums-react-app/master/public/data/data.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          albums: data\r\n        })\r\n      })\r\n  }\r\n\r\n  allRoutes = () => {\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <section>\r\n            <Switch>\r\n              <Route path=\"/60s\">\r\n                <AlbumList albums={this.state.albums} time='1960' />\r\n              </Route>\r\n              <Route path='/70s'>\r\n                <AlbumList albums={this.state.albums} time='1970' />\r\n              </Route>\r\n              <Route path='/80s'>\r\n                <AlbumList albums={this.state.albums} time='1980' />\r\n              </Route>\r\n              <Route path='/90s'>\r\n                <AlbumList albums={this.state.albums} time='1990' />\r\n              </Route>\r\n              <Route path='/00s'>\r\n                <AlbumList albums={this.state.albums} time='2000' />\r\n              </Route>\r\n              <Route path='/10s'>\r\n                <AlbumList albums={this.state.albums} time='2010' />\r\n              </Route>\r\n              <Route path='/today'>\r\n                <AlbumList albums={this.state.albums} time='today' />\r\n              </Route>\r\n              <Route path='/' exact>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n              <Route>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n            </Switch>\r\n          </section>\r\n          <footer>\r\n            <Footer />\r\n          </footer>\r\n        </div >\r\n      </HashRouter >\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.allRoutes()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}