{"version":3,"sources":["img/Group 20.svg","img/Path 2.svg","img/play.png","img/kostkiniebieskie.svg","img/Group 30.svg","components/Navigation.js","components/Album.js","components/AlbumSliderItem.js","components/Header.js","components/DecadeSlider.js","components/RandomSection.js","components/AlbumList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","className","to","exact","Album","src","cover","alt","title","artist","year","href","rymLink","target","rel","AlbumsSliderItem","Header","state","randomiseAlbums","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","albumSliderArray","this","albums","AlbumSliderItems","filter","album","index","map","key","photoLink","console","log","id","blob","play","wave","React","Component","DecadeSlider","activeNumber","decadeLeftLink","decadeRightLink","lexact","rexact","handleDecadeClick","a","decadeLinks","setState","decadeList","timeArray","item","style","transform","onClick","RandomSection","btnClickFunc","kostkiNiebieskie","wave2","AlbumList","search","albumsSite","albumSiteListAmount","timeLine","handleRandomButtonClick","todaysAlbum","today","amount","time","handleSearchChange","e","val","value","handlePaginationClick","parseInt","innerHTML","handlePaginationArrowClick","resetPagination","albumSiteList","indexOf","toLowerCase","includes","i","push","App","allRoutes","basename","process","path","fetch","then","response","json","data","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b8924868.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 20.b59ac174.svg\";","module.exports = __webpack_public_path__ + \"static/media/Path 2.d93632bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.060efb9c.png\";","module.exports = __webpack_public_path__ + \"static/media/kostkiniebieskie.0e6df351.svg\";","module.exports = __webpack_public_path__ + \"static/media/Group 30.92e3302d.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = (props) => (\r\n    <>\r\n        <nav>\r\n            <ul className='naviList'>\r\n                <li><NavLink to='/' exact>show all</NavLink></li>\r\n                <li><NavLink to='/60s'>60s</NavLink></li>\r\n                <li><NavLink to='/70s'>70s</NavLink></li>\r\n                <li><NavLink to='/80s'>80s</NavLink></li>\r\n                <li><NavLink to='/90s'>90s</NavLink></li>\r\n                <li><NavLink to='/00s'>00s</NavLink></li>\r\n                <li><NavLink to='/10s'>10s</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </>\r\n)\r\n\r\nexport default Navigation","import React from 'react';\r\nimport '../styles/Album.sass'\r\n\r\nconst Album = props => (\r\n    <div className='album'>\r\n        <div className='albumInfoContainer'>\r\n            <div className='img'>\r\n                <img src={props.cover} alt=\"\" />\r\n            </div>\r\n            <ul>\r\n                <li><h4> {props.title}</h4></li>\r\n                <li><h4> {props.artist}</h4></li>\r\n                <li><h2> {props.year}</h2></li>\r\n            </ul>\r\n        </div>\r\n        <a href={props.rymLink} target='_blank' rel=\"noopener noreferrer\">\r\n            <div></div>\r\n        </a>\r\n    </div>\r\n)\r\n\r\nexport default Album;","import React from 'react';\r\n\r\nimport '../styles/AlbumSliderItem.sass'\r\nimport Album from './Album';\r\n\r\nconst AlbumsSliderItem = (props) => {\r\n    return (\r\n        <div className=\"albumSliderItem\">\r\n            <div className='img'>\r\n                <img src={props.cover} alt=\"\" />\r\n            </div>\r\n            <span className=\"sliderYear\">{props.year}</span>\r\n            <p><span>{props.title}</span><span> {'//'} {props.artist}</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumsSliderItem;\r\n","import React from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport AlbumSliderItem from './AlbumSliderItem';\r\n\r\nimport blob from '../img/Path 2.svg'\r\nimport play from '../img/play.png'\r\nimport wave from '../img/Group 20.svg'\r\n\r\nimport '../styles/header.sass'\r\n\r\nclass Header extends React.Component {\r\n    state = {}\r\n\r\n    randomiseAlbums = (array) => {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    render() {\r\n        let albumSliderArray = this.randomiseAlbums(this.props.albums);\r\n        const AlbumSliderItems = this.props.albums.filter((album, index) => index < 20).map((album, index) => <AlbumSliderItem key={index} title={album.title} artist={album.artist} cover={album.photoLink} year={album.year} />)\r\n\r\n        console.log(albumSliderArray)\r\n        return (\r\n            <div id=\"header\">\r\n                <div id=\"headerImageContainer\">\r\n                    <img className='blob' src={blob} alt=\"\" />\r\n                    <img id=\"play\" src={play} alt=\"\" />\r\n                    <img className=\"wave\" id=\"wave1\" src={wave} alt=\"\" />\r\n                    <img className=\"wave\" id=\"wave2\" src={wave} alt=\"\" />\r\n                    <img className=\"wave\" id=\"wave3\" src={wave} alt=\"\" />\r\n                    <img className=\"wave\" id=\"wave4\" src={wave} alt=\"\" />\r\n                </div>\r\n                <div id=\"headerTextContainer\">\r\n                    <Navigation props={this.props} />\r\n                    <h1>My<br />music</h1>\r\n                    <h3>albums from my jukebox</h3>\r\n                    <div id=\"albumSliderContainer\">\r\n                        <div id=\"albumSliderItemsContainer\">\r\n                            <div id=\"albumSliderItems\">\r\n                                <div id=\"items\">\r\n                                    {AlbumSliderItems}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"sliderArrows\">\r\n                            <span className='sliderArrow'>{'<'}</span>\r\n                            <span className='sliderArrow'>{'>'}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport '../styles/DecadeSlider.sass'\r\n\r\nclass DecadeSlider extends React.Component {\r\n    state = {\r\n        activeNumber: 3,\r\n        decadeLeftLink: '80s',\r\n        decadeRightLink: '90s',\r\n        lexact: false,\r\n        rexact: false\r\n    }\r\n\r\n    handleDecadeClick = (a) => {\r\n        if ((a === -1 && this.state.activeNumber > 0) || (a === 1 && this.state.activeNumber < 6)) {\r\n            let activeNumber = this.state.activeNumber + a\r\n            const decadeLinks = ['60s', '70s', '80s', '', '90s', '00s', '10s']\r\n            if (activeNumber === 0) { this.setState({ decadeLeftLink: decadeLinks[0], decadeRightLink: decadeLinks[1] }) };\r\n            if (activeNumber === 1) { this.setState({ decadeLeftLink: decadeLinks[0], decadeRightLink: decadeLinks[2] }) };\r\n            if (activeNumber === 2) { this.setState({ decadeLeftLink: decadeLinks[1], decadeRightLink: decadeLinks[3] }) };\r\n            if (activeNumber === 3) { this.setState({ decadeLeftLink: decadeLinks[2], decadeRightLink: decadeLinks[4] }) };\r\n            if (activeNumber === 4) { this.setState({ decadeLeftLink: decadeLinks[3], decadeRightLink: decadeLinks[5] }) };\r\n            if (activeNumber === 5) { this.setState({ decadeLeftLink: decadeLinks[4], decadeRightLink: decadeLinks[6] }) };\r\n            if (activeNumber === 6) { this.setState({ decadeLeftLink: decadeLinks[5], decadeRightLink: decadeLinks[6] }) };\r\n            this.setState({\r\n                activeNumber: this.state.activeNumber + a,\r\n\r\n            })\r\n        }\r\n        // this.decadeArrowClick()\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('hello')\r\n    }\r\n    render() {\r\n        const { activeNumber, decadeLeftLink, decadeRightLink, lexact, rexact } = this.state\r\n        const { timeArray } = this.props\r\n        let decadeList = timeArray.map((item, index) => <li className={index === activeNumber ? 'decade active' : 'decade'} key={index} > {item}</li>)\r\n        return (\r\n            < div id=\"decadeSlider\" >\r\n                <div id=\"decadeListContainer\">\r\n                    <ul style={{ transform: `translateX(${-1225 - (activeNumber - 3) * 350}px)` }}>\r\n                        {decadeList}\r\n                    </ul>\r\n                </div>\r\n                <div id=\"activeContainer\">\r\n                    <div></div>\r\n                </div>\r\n                <div id=\"decadeArrows\">\r\n                    <span onClick={() => this.handleDecadeClick(-1)}><NavLink to={decadeLeftLink} exact={lexact}>{'<'}</NavLink></span>\r\n                    <span onClick={() => this.handleDecadeClick(1)}><NavLink to={decadeRightLink} exact={rexact}>{'>'}</NavLink></span>\r\n                </div>\r\n                {/* '/60s' */}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default DecadeSlider;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport kostkiNiebieskie from '../img/kostkiniebieskie.svg'\r\nimport blob from '../img/Path 2.svg';\r\nimport wave from '../img/Group 20.svg';\r\nimport wave2 from '../img/Group 30.svg';\r\n\r\nimport \"../styles/RandomSection.sass\"\r\n\r\nconst RandomSection = (props) => {\r\n    return (\r\n        <div id=\"randomSection\">\r\n            <div id='randomSectionText'>\r\n                <h2>Random pick?</h2>\r\n                <NavLink to='/today'>\r\n                    <button onClick={props.btnClickFunc}>click to choose</button>\r\n                </NavLink>\r\n                <img src={kostkiNiebieskie} alt=\"\" id=\"kostkiNiebieskie\" />\r\n                <img src={blob} alt=\"\" id=\"blob1\" className=\"blob\" />\r\n                <img src={blob} alt=\"\" id=\"blob2\" className=\"blob\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave1\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave2\" className=\"wave\" />\r\n                <img src={wave2} alt=\"\" id=\"randomWave3\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave4\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave5\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave6\" className=\"wave\" />\r\n            </div>\r\n            {/* <div className='random info' onClick={amount === 1 ? this.handleRandomButtonClick : null}>\r\n            </NavLink></div> */}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default RandomSection;","import React, { Component } from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\n\r\nimport Album from './Album';\r\nimport DecadeSlider from './DecadeSlider';\r\nimport RandomSection from './RandomSection';\r\n\r\nimport '../styles/AlbumList.sass';\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faDice } from '@fortawesome/free-solid-svg-icons'\r\n// import { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass AlbumList extends Component {\r\n    state = {\r\n        search: '',\r\n        albumsSite: 1,\r\n        albumSiteListAmount: ''\r\n    }\r\n\r\n    timeLine = ['60s', '70s', '80s', 'show all', '90s', '00s', '10s']\r\n\r\n    handleRandomButtonClick = () => {\r\n        let albums = [...this.props.albums];\r\n        let index = Math.floor(Math.random() * albums.length);\r\n        let todaysAlbum = albums[index];\r\n        const today = <Album key={1} artist={todaysAlbum.artist} title={todaysAlbum.title} year={todaysAlbum.year} cover={todaysAlbum.cover} rymLink={todaysAlbum.rymLink} />;\r\n\r\n        this.setState({\r\n            albums: today,\r\n            amount: 1,\r\n            time: ''\r\n        })\r\n        console.log('helloGuineaPig')\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        let val = e.target.value;\r\n        this.setState({\r\n            search: val\r\n        })\r\n    }\r\n\r\n    handlePaginationClick = (e) => {\r\n        this.setState({\r\n            albumsSite: parseInt(e.target.innerHTML)\r\n        })\r\n    }\r\n\r\n    handlePaginationArrowClick = (a) => {\r\n        if (this.state.albumsSite > 1 && a === (-1)) {\r\n            this.setState({\r\n                albumsSite: this.state.albumsSite + a\r\n            })\r\n        } else if (a === 1) {\r\n            if (this.props.time === \"all\" && (this.state.albumsSite < this.props.albums.length / 25)) {\r\n                this.setState({\r\n                    albumsSite: this.state.albumsSite + a\r\n                })\r\n            } else if (this.props.time !== \"all\" && this.props.time !== \"today\"\r\n            ) {\r\n                let albums = this.props.albums.filter(album => album.year >= this.props.time && album.year < parseInt(this.props.time) + 10)\r\n                if (this.state.albumsSite < albums.length / 25) {\r\n                    this.setState({\r\n                        albumsSite: this.state.albumsSite + a\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resetPagination = () => {\r\n        this.setState({\r\n            time: this.props.time,\r\n            albumsSite: 1\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.time !== this.state.time) {\r\n            this.resetPagination()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { albums, time } = this.props\r\n        const { albumsSite } = this.state\r\n        let album = [];\r\n        let amount;\r\n        let albumSiteList = []\r\n        let albumSiteListAmount;\r\n        if (this.state.search === '') {\r\n            if (time === 'all') {\r\n                // album = albums.map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n                album = albums\r\n                    .filter((album, index) => (index >= (albumsSite * 25 - 25) && index < (albumsSite * 25)))\r\n                    .map((album, index) => <Album key={index} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n                amount = albums.length\r\n            } else if (time === 'today') {\r\n                let index = Math.floor(Math.random() * albums.length);\r\n                album = albums\r\n                    .filter(album => albums.indexOf(album) === index)\r\n                    .map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n                amount = album.length\r\n            } else {\r\n                album = albums\r\n                    .filter(album => album.year >= time && album.year < parseInt(time) + 10)\r\n                    .map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n                amount = album.length\r\n\r\n                album = album.filter((album, index) => (index >= (albumsSite * 25 - 25) && index < (albumsSite * 25)))\r\n            }\r\n        } else {\r\n            album = albums\r\n                .filter(album => album.artist.toLowerCase().includes(this.state.search.toLowerCase()) || album.title.toLowerCase().includes(this.state.search.toLowerCase()) || album.year.toLowerCase().includes(this.state.search.toLowerCase()))\r\n                .map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            amount = album.length\r\n        }\r\n        if (amount === 0) { albumSiteListAmount = 0 }\r\n        else { albumSiteListAmount = (Math.floor(amount / 25 + 1)) }\r\n        for (let i = 1; i <= albumSiteListAmount; i++) {\r\n            albumSiteList.push(i);\r\n        }\r\n        albumSiteList = albumSiteList.map(item => <li key={item} onClick={this.handlePaginationClick}>{item}</li>);\r\n        return (\r\n            <div>\r\n                {/* \r\n                    <div className='amount info'>\r\n                        Number: {amount}\r\n                    </div>\r\n                    <form className=\"search info\">\r\n                        <input type=\"text\" name=\"search\" onChange={this.handleSearchChange} placeholder=\"search\"></input>\r\n                        <span><FontAwesomeIcon icon={faSearch} /></span>\r\n                    </form>\r\n                </div> */}\r\n                <DecadeSlider timeArray={this.timeLine} />\r\n                <div id=\"albumList\" className='albumList'>\r\n                    {album}\r\n                </div>\r\n                <div id=\"albumSites\">\r\n                    <span onClick={() => this.handlePaginationArrowClick(-1)}>{'<'}</span>\r\n                    <ul>\r\n                        {albumSiteList}\r\n                    </ul>\r\n                    <span onClick={() => this.handlePaginationArrowClick(1)}>{'>'}</span>\r\n                </div>\r\n                <RandomSection btnClickFunc={this.handleRandomButtonClick} />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumList;","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport AlbumList from './AlbumList'\r\n// import Footer from './Footer'\r\nimport '../styles/App.sass'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    albums: [],\r\n  }\r\n\r\n  handleDecadeClick = () => {\r\n    this.setState({\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://raw.githubusercontent.com/Morswin19/my-albums-react-app/master/public/data/data.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          albums: data\r\n        })\r\n      })\r\n  }\r\n\r\n  allRoutes = () => {\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header albums={this.state.albums} />\r\n          <section>\r\n            <Switch>\r\n              <Route path=\"/60s\">\r\n                <AlbumList albums={this.state.albums} time='1960' />\r\n              </Route>\r\n              <Route path='/70s'>\r\n                <AlbumList albums={this.state.albums} time='1970' />\r\n              </Route>\r\n              <Route path='/80s'>\r\n                <AlbumList albums={this.state.albums} time='1980' />\r\n              </Route>\r\n              <Route path='/90s'>\r\n                <AlbumList albums={this.state.albums} time='1990' />\r\n              </Route>\r\n              <Route path='/00s'>\r\n                <AlbumList albums={this.state.albums} time='2000' />\r\n              </Route>\r\n              <Route path='/10s'>\r\n                <AlbumList albums={this.state.albums} time='2010' />\r\n              </Route>\r\n              <Route path='/today'>\r\n                <AlbumList albums={this.state.albums} time='today' />\r\n              </Route>\r\n              <Route path='/' exact>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n              <Route>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n            </Switch>\r\n          </section>\r\n          {/* <footer>\r\n            <Footer />\r\n          </footer> */}\r\n        </div >\r\n      </HashRouter >\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.allRoutes()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}