{"version":3,"sources":["img/Group 20.svg","img/Path 2.svg","img/play.png","img/kostkiniebieskie.svg","img/Group 30.svg","components/Navigation.js","components/AlbumSliderItem.js","components/Header.js","components/Album.js","components/DecadeSlider.js","components/RandomSection.js","components/AlbumList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","to","exact","AlbumSliderItem","src","alt","Header","props","id","blob","play","wave","Album","cover","title","artist","year","href","rymLink","target","rel","DecadeSlider","state","decadeList","this","timeArray","map","item","index","key","React","Component","RandomSection","kostkiNiebieskie","wave2","timeLine","AlbumList","search","handleRandomButtonClick","albums","todaysAlbum","Math","floor","random","length","today","setState","amount","handleSearchChange","e","val","value","console","log","time","album","indexOf","photoLink","filter","parseInt","toLowerCase","includes","App","allRoutes","basename","process","path","fetch","then","response","json","data","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1fdd266a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 20.b59ac174.svg\";","module.exports = __webpack_public_path__ + \"static/media/Path 2.d93632bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.060efb9c.png\";","module.exports = __webpack_public_path__ + \"static/media/kostkiniebieskie.0e6df351.svg\";","module.exports = __webpack_public_path__ + \"static/media/Group 30.92e3302d.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => (\r\n    <>\r\n        <nav>\r\n            <ul className='naviList'>\r\n                <li><NavLink to='/' exact>show all</NavLink></li>\r\n                <li><NavLink to='/60s'>60s</NavLink></li>\r\n                <li><NavLink to='/70s'>70s</NavLink></li>\r\n                <li><NavLink to='/80s'>80s</NavLink></li>\r\n                <li><NavLink to='/90s'>90s</NavLink></li>\r\n                <li><NavLink to='/00s'>00s</NavLink></li>\r\n                <li><NavLink to='/10s'>10s</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </>\r\n)\r\n\r\nexport default Navigation","import React from 'react';\r\n\r\nimport '../styles/AlbumSliderItem.sass'\r\n\r\nconst AlbumSliderItem = () => {\r\n    return (\r\n        <div className=\"albumSliderItem\">\r\n            <div className='img'>\r\n                <img src='https://e.snmc.io/i/fullres/w/4a3362886ae63678bc15d93b029db149/1553033' alt=\"\" />\r\n            </div>\r\n            <span className=\"sliderYear\">1986</span>\r\n            <p><span>The Colour Of Spring</span><span> // Talk Talk</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumSliderItem;","import React from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport AlbumSliderItem from './AlbumSliderItem';\r\n\r\nimport blob from '../img/Path 2.svg'\r\nimport play from '../img/play.png'\r\nimport wave from '../img/Group 20.svg'\r\n\r\nimport '../styles/header.sass'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div id=\"header\">\r\n            <div id=\"headerImageContainer\">\r\n                <img className='blob' src={blob} alt=\"\" />\r\n                <img id=\"play\" src={play} alt=\"\" />\r\n                <img className=\"wave\" id=\"wave1\" src={wave} alt=\"\" />\r\n                <img className=\"wave\" id=\"wave2\" src={wave} alt=\"\" />\r\n                <img className=\"wave\" id=\"wave3\" src={wave} alt=\"\" />\r\n                <img className=\"wave\" id=\"wave4\" src={wave} alt=\"\" />\r\n            </div>\r\n            <div id=\"headerTextContainer\">\r\n                <Navigation />\r\n                <h1>My<br />music</h1>\r\n                <h3>albums from my jukebox</h3>\r\n                <div id=\"albumSlider\">\r\n                    <span className='sliderArrow'>{'<'}</span>\r\n                    <AlbumSliderItem />\r\n                    <AlbumSliderItem />\r\n                    <span className='sliderArrow'>{'>'}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../styles/Album.sass'\r\n\r\nconst Album = props => (\r\n    <div className='album'>\r\n        <div className='albumInfoContainer'>\r\n            <div className='img'>\r\n                <img src={props.cover} alt=\"\" />\r\n            </div>\r\n            <ul>\r\n                <li><h4> {props.title}</h4></li>\r\n                <li><h4> {props.artist}</h4></li>\r\n                <li><h2> {props.year}</h2></li>\r\n            </ul>\r\n        </div>\r\n        <a href={props.rymLink} target='_blank' rel=\"noopener noreferrer\">\r\n            <div></div>\r\n        </a>\r\n    </div>\r\n)\r\n\r\nexport default Album;","import React from 'react';\r\n\r\nimport '../styles/DecadeSlider.sass'\r\n\r\nclass DecadeSlider extends React.Component {\r\n    state = {}\r\n    render() {\r\n        const { timeArray } = this.props\r\n        let decadeList = timeArray.map((item, index) => <li className='decade' key='index'>{item}</li>)\r\n        return (\r\n            < div id=\"decadeSlider\" >\r\n                <ul>\r\n                    {decadeList}\r\n                </ul>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default DecadeSlider;","import React from 'react';\r\n\r\nimport kostkiNiebieskie from '../img/kostkiniebieskie.svg'\r\nimport blob from '../img/Path 2.svg';\r\nimport wave from '../img/Group 20.svg';\r\nimport wave2 from '../img/Group 30.svg';\r\n\r\nimport \"../styles/RandomSection.sass\"\r\n\r\nconst RandomSection = () => {\r\n    return (\r\n        <div id=\"randomSection\">\r\n            <div id='randomSectionText'>\r\n                <h2>Random pick?</h2>\r\n                <button>click to choose</button>\r\n                <img src={kostkiNiebieskie} alt=\"\" id=\"kostkiNiebieskie\" />\r\n                <img src={blob} alt=\"\" id=\"blob1\" className=\"blob\" />\r\n                <img src={blob} alt=\"\" id=\"blob2\" className=\"blob\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave1\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave2\" className=\"wave\" />\r\n                <img src={wave2} alt=\"\" id=\"randomWave3\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave4\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave5\" className=\"wave\" />\r\n                <img src={wave} alt=\"\" id=\"randomWave6\" className=\"wave\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomSection;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Album from './Album';\r\nimport DecadeSlider from './DecadeSlider';\r\nimport RandomSection from './RandomSection';\r\n\r\nimport '../styles/AlbumList.sass';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDice } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst timeLine = ['90s', '00s', '10s', 'show all', '60s', '70s', '80s', '90s', '00s', '10s', 'show all']\r\n\r\nclass AlbumList extends Component {\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    handleRandomButtonClick = () => {\r\n        let albums = [...this.props.albums];\r\n        let index = Math.floor(Math.random() * albums.length);\r\n        let todaysAlbum = albums[index];\r\n        const today = <Album key={1} artist={todaysAlbum.artist} title={todaysAlbum.title} year={todaysAlbum.year} cover={todaysAlbum.cover} rymLink={todaysAlbum.rymLink} />;\r\n\r\n        this.setState({\r\n            albums: today,\r\n            amount: 1,\r\n        })\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        let val = e.target.value;\r\n        this.setState({\r\n            search: val\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.search);\r\n    }\r\n\r\n    render() {\r\n        const { albums, time } = this.props\r\n        let album = [];\r\n        let amount = album.length\r\n        if (this.state.search === '') {\r\n            if (time === 'all') {\r\n                album = albums.map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            } else if (time === 'today') {\r\n                let index = Math.floor(Math.random() * albums.length);\r\n                album = albums.filter(album => albums.indexOf(album) === index).map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            } else {\r\n                album = albums.filter(album => album.year >= time && album.year < parseInt(time) + 10).map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n            }\r\n        } else {\r\n            // const reg = new RegExp(this.state.search, \"gim\")\r\n            album = albums.filter(album => album.artist.toLowerCase().includes(this.state.search.toLowerCase()) || album.title.toLowerCase().includes(this.state.search.toLowerCase()) || album.year.toLowerCase().includes(this.state.search.toLowerCase())).map(album => <Album key={albums.indexOf(album)} artist={album.artist} title={album.title} year={album.year} cover={album.photoLink} rymLink={album.rymLink} />)\r\n        }\r\n        amount = album.length\r\n        return (\r\n            <div>\r\n                {/* <div className='randomAmount'>\r\n                    <div className='amount info'>\r\n                        Number: {amount}\r\n                    </div>\r\n                    <form className=\"search info\">\r\n                        <input type=\"text\" name=\"search\" onChange={this.handleSearchChange} placeholder=\"search\"></input>\r\n                        <span><FontAwesomeIcon icon={faSearch} /></span>\r\n                    </form>\r\n                    <div className='random info' onClick={amount === 1 ? this.handleRandomButtonClick : null}><NavLink to='/today'>\r\n                        Today You will listen: <span><FontAwesomeIcon icon={faDice} /></span>\r\n                    </NavLink>\r\n                    </div>\r\n                </div> */}\r\n                <DecadeSlider timeArray={timeLine} />\r\n                <div className='albumList'>\r\n                    {album}\r\n                </div>\r\n                <div id=\"albumSites\">\r\n                    <span>{'<'}</span>\r\n                    <ul>\r\n                        <li>1</li>\r\n                        <li>2</li>\r\n                    </ul>\r\n                    <span>{'>'}</span>\r\n                </div>\r\n                <RandomSection />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumList;","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport AlbumList from './AlbumList'\r\nimport Footer from './Footer'\r\nimport '../styles/App.sass'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    albums: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://raw.githubusercontent.com/Morswin19/my-albums-react-app/master/public/data/data.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          albums: data\r\n        })\r\n      })\r\n  }\r\n\r\n  allRoutes = () => {\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <section>\r\n            <Switch>\r\n              <Route path=\"/60s\">\r\n                <AlbumList albums={this.state.albums} time='1960' />\r\n              </Route>\r\n              <Route path='/70s'>\r\n                <AlbumList albums={this.state.albums} time='1970' />\r\n              </Route>\r\n              <Route path='/80s'>\r\n                <AlbumList albums={this.state.albums} time='1980' />\r\n              </Route>\r\n              <Route path='/90s'>\r\n                <AlbumList albums={this.state.albums} time='1990' />\r\n              </Route>\r\n              <Route path='/00s'>\r\n                <AlbumList albums={this.state.albums} time='2000' />\r\n              </Route>\r\n              <Route path='/10s'>\r\n                <AlbumList albums={this.state.albums} time='2010' />\r\n              </Route>\r\n              <Route path='/today'>\r\n                <AlbumList albums={this.state.albums} time='today' />\r\n              </Route>\r\n              <Route path='/' exact>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n              <Route>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n            </Switch>\r\n          </section>\r\n          {/* <footer>\r\n            <Footer />\r\n          </footer> */}\r\n        </div >\r\n      </HashRouter >\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.allRoutes()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}