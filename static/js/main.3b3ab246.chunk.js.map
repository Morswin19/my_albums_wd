{"version":3,"sources":["img/Group 20.svg","img/Path 2.svg","img/Group 30.svg","img/play.png","img/kostkiniebieskie.svg","components/Navigation.js","components/AlbumSliderItem.js","components/Header.js","components/Album.js","components/DecadeSlider.js","components/RandomSection.js","components/AlbumList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","className","onClick","window","scrollTo","scrollX","to","exact","AlbumsSliderItem","src","cover","alt","year","href","rymLink","target","rel","title","artist","Header","state","sliderShift","albums","search","random","Math","floor","handleSearchChange","e","val","value","setState","handleSliderArrowClick","sliderItems","parseInt","parentElement","innerText","innerWidth","amount","this","Album","filter","album","toLowerCase","includes","map","key","indexOf","photoLinkSmall","length","index","id","blob","play","wave","type","autoComplete","name","onChange","placeholder","style","transform","React","Component","DecadeSlider","activeNumber","decadeLeftLink","decadeRightLink","lexact","rexact","resizeBool","handleDecadeClick","a","decadeLinks","handleResize","handlePath","console","log","mainLocation","location","hash","addEventListener","decadeList","timeArray","item","RandomSection","btnClickFunc","kostkiNiebieskie","wave2","AlbumList","albumsSite","albumSiteListAmount","timeLine","handleRandomButtonClick","todaysAlbum","today","time","handlePaginationClick","innerHTML","handlePaginationArrowClick","resetPagination","albumSiteList","i","push","App","randomAlbums","allRoutes","basename","process","handleClick","path","fetch","then","response","json","data","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3b3ab246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group 20.b59ac174.svg\";","module.exports = __webpack_public_path__ + \"static/media/Path 2.d93632bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Group 30.92e3302d.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.060efb9c.png\";","module.exports = __webpack_public_path__ + \"static/media/kostkiniebieskie.0e6df351.svg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = (props) => (\r\n    <>\r\n        <nav>\r\n            <ul className='naviList'>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/' exact>show all</NavLink></li>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/60s'>60s</NavLink></li>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/70s'>70s</NavLink></li>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/80s'>80s</NavLink></li>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/90s'>90s</NavLink></li>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/00s'>00s</NavLink></li>\r\n                <li onClick={() => { window.scrollTo(window.scrollX, 920)}} ><NavLink to='/10s'>10s</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </>\r\n)\r\n\r\nexport default Navigation","import React from 'react';\r\n\r\nimport '../styles/AlbumSliderItem.sass'\r\n\r\nconst AlbumsSliderItem = (props) => {\r\n    return (\r\n        <div className=\"albumSliderItem\">\r\n            <div className='img'>\r\n                <img src={props.cover} alt=\"\" />\r\n            </div>\r\n            <span className=\"sliderYear\">{props.year}</span>\r\n            <a href={props.rymLink} target='_blank' rel=\"noopener noreferrer\"><p><span>{props.title}</span><span> {'//'} {props.artist}</span></p></a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumsSliderItem;\r\n","import React from 'react';\r\n\r\nimport Navigation from './Navigation';\r\nimport AlbumSliderItem from './AlbumSliderItem';\r\n\r\nimport blob from '../img/Path 2.svg';\r\nimport play from '../img/play.png';\r\nimport wave from '../img/Group 20.svg';\r\n\r\nimport '../styles/header.sass';\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    sliderShift: 0,\r\n    albums: this.props.albums,\r\n    search: '',\r\n    random: Math.floor(Math.random() * 240)\r\n  };\r\n\r\n  handleSearchChange = e => {\r\n    let val = e.target.value;\r\n    this.setState({\r\n      search: val,\r\n      sliderShift: 0\r\n    });\r\n  };\r\n\r\n  handleSliderArrowClick = e => {\r\n    const sliderItems = parseInt(e.target.parentElement.className);\r\n\r\n    e.target.innerText === '<'\r\n      ? this.state.sliderShift < 0 &&\r\n        this.setState({\r\n          sliderShift: this.state.sliderShift + 285\r\n        })\r\n      : this.state.sliderShift >\r\n          -(285 * (sliderItems - (window.innerWidth > 650 ? 2 : 1))) &&\r\n        this.setState({\r\n          sliderShift: this.state.sliderShift - 285\r\n        });\r\n  };\r\n\r\n  render() {\r\n    const { albums } = this.props;\r\n    let Album = [];\r\n    let amount;\r\n    if (this.state.search !== '') {\r\n      Album = albums\r\n        .filter(\r\n          album =>\r\n            album.artist\r\n              .toLowerCase()\r\n              .includes(this.state.search.toLowerCase()) ||\r\n            album.title\r\n              .toLowerCase()\r\n              .includes(this.state.search.toLowerCase()) ||\r\n            album.year.toLowerCase().includes(this.state.search.toLowerCase())\r\n        )\r\n        .map(album => (\r\n          <AlbumSliderItem\r\n            key={albums.indexOf(album)}\r\n            artist={album.artist}\r\n            title={album.title}\r\n            year={album.year}\r\n            cover={album.photoLinkSmall}\r\n            rymLink={album.rymLink}\r\n          />\r\n        ));\r\n      amount = Album.length;\r\n    } else {\r\n      Album = albums\r\n        .filter(\r\n          (album, index) =>\r\n            index >= this.state.random && index < this.state.random + 20\r\n        )\r\n        .map(album => (\r\n          <AlbumSliderItem\r\n            key={albums.indexOf(album)}\r\n            artist={album.artist}\r\n            title={album.title}\r\n            year={album.year}\r\n            cover={album.photoLinkSmall}\r\n            rymLink={album.rymLink}\r\n          />\r\n        ));\r\n      amount = Album.length;\r\n    }\r\n\r\n    return (\r\n      <div id='header'>\r\n        <div id='headerImageContainer'>\r\n          <img className='blob' src={blob} alt='' />\r\n          <img id='play' src={play} alt='' />\r\n          <img className='wave' id='wave1' src={wave} alt='' />\r\n          <img className='wave' id='wave2' src={wave} alt='' />\r\n          <img className='wave' id='wave3' src={wave} alt='' />\r\n          <img className='wave' id='wave4' src={wave} alt='' />\r\n        </div>\r\n        <div id='headerTextContainer'>\r\n          <Navigation />\r\n          <h1>\r\n            My\r\n            <br />\r\n            music\r\n          </h1>\r\n          <h2>albums from my jukebox</h2>\r\n          <form className='search info'>\r\n            <input\r\n              type='text'\r\n              autoComplete='off'\r\n              name='search'\r\n              onChange={this.handleSearchChange}\r\n              placeholder='search: eg. title, band, year'\r\n            ></input>\r\n            <div>\r\n              <div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div id='albumSliderContainer'>\r\n            <div id='albumSliderItemsContainer'>\r\n              <div id='albumSliderItems'>\r\n                <div\r\n                  id='items'\r\n                  style={{\r\n                    transform: `translateX(${this.state.sliderShift}px)`\r\n                  }}\r\n                >\r\n                  {Album}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={amount} id='sliderArrows'>\r\n              <span\r\n                className='sliderArrow'\r\n                onClick={e => this.handleSliderArrowClick(e)}\r\n              >\r\n                {'<'}\r\n              </span>\r\n              <span\r\n                className='sliderArrow'\r\n                onClick={e => this.handleSliderArrowClick(e)}\r\n              >\r\n                {'>'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../styles/Album.sass'\r\n\r\nconst Album = props => (\r\n    <div className='album'>\r\n        <div className='albumInfoContainer'>\r\n            <div className='img'>\r\n                <img src={props.cover} alt=\"\" />\r\n            </div>\r\n            <ul>\r\n                <li><h3> <strong>{props.title}</strong></h3></li>\r\n                <li><h3> {props.artist}</h3></li>\r\n                <li><h2> {props.year}</h2></li>\r\n            </ul>\r\n        </div>\r\n        <a href={props.rymLink} target='_blank' rel=\"noopener noreferrer\">\r\n            <div></div>\r\n        </a>\r\n    </div>\r\n)\r\n\r\nexport default Album;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport '../styles/DecadeSlider.sass'\r\n\r\nclass DecadeSlider extends React.Component {\r\n    state = {\r\n        activeNumber: 3,\r\n        decadeLeftLink: '80s',\r\n        decadeRightLink: '90s',\r\n        lexact: false,\r\n        rexact: false,\r\n        resizeBool: false\r\n    }\r\n\r\n    handleDecadeClick = (a) => {\r\n        if ((a === -1 && this.state.activeNumber > 0) || (a === 1 && this.state.activeNumber < 6)) {\r\n            let activeNumber = this.state.activeNumber + a\r\n            const decadeLinks = ['60s', '70s', '80s', '', '90s', '00s', '10s']\r\n            if (activeNumber === 0) { this.setState({ decadeLeftLink: decadeLinks[0], decadeRightLink: decadeLinks[1] }) };\r\n            if (activeNumber === 1) { this.setState({ decadeLeftLink: decadeLinks[0], decadeRightLink: decadeLinks[2] }) };\r\n            if (activeNumber === 2) { this.setState({ decadeLeftLink: decadeLinks[1], decadeRightLink: decadeLinks[3] }) };\r\n            if (activeNumber === 3) { this.setState({ decadeLeftLink: decadeLinks[2], decadeRightLink: decadeLinks[4] }) };\r\n            if (activeNumber === 4) { this.setState({ decadeLeftLink: decadeLinks[3], decadeRightLink: decadeLinks[5] }) };\r\n            if (activeNumber === 5) { this.setState({ decadeLeftLink: decadeLinks[4], decadeRightLink: decadeLinks[6] }) };\r\n            if (activeNumber === 6) { this.setState({ decadeLeftLink: decadeLinks[5], decadeRightLink: decadeLinks[6] }) };\r\n            this.setState({\r\n                activeNumber: this.state.activeNumber + a,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleResize = () => {\r\n        window.innerWidth < 1100\r\n            ? this.setState({ resizeBool: true })\r\n            : this.setState({ resizeBool: false })\r\n    }\r\n\r\n    handlePath = () => {\r\n        console.log('hello guinea Pig')\r\n        const mainLocation = '#/my_albums_wd/'\r\n        if (window.location.hash === mainLocation + '60s') {\r\n            this.setState({ activeNumber: 0 })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize)\r\n        this.handleResize()\r\n    }\r\n\r\n    render() {\r\n        const { activeNumber, decadeLeftLink, decadeRightLink, lexact, rexact, resizeBool } = this.state\r\n        const { timeArray } = this.props\r\n        let decadeList = timeArray.map((item, index) => <li className={index === activeNumber ? 'decade active' : 'decade'} key={index} > {item}</li>)\r\n        return (\r\n            < div id=\"decadeSlider\" >\r\n                <div id=\"decadeListContainer\">\r\n                    <ul style={!resizeBool ? { transform: `translateX(${-1225 - (activeNumber - 3) * 350}px)` } : (window.innerWidth > 650 ? { transform: `translateX(${-875 - (activeNumber - 3) * 250}px)` } : { transform: `translateX(${- 630 - (activeNumber - 3) * 180}px)` })}>\r\n                        {decadeList}\r\n                    </ul>\r\n                </div>\r\n                <div id=\"activeContainer\">\r\n                    <div></div>\r\n                </div>\r\n                <div id=\"decadeArrows\">\r\n                    <span onClick={() => this.handleDecadeClick(-1)}><NavLink to={decadeLeftLink} exact={lexact}>{'<'}</NavLink></span>\r\n                    <span onClick={() => this.handleDecadeClick(1)}><NavLink to={decadeRightLink} exact={rexact}>{'>'}</NavLink></span>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default DecadeSlider;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport kostkiNiebieskie from '../img/kostkiniebieskie.svg';\r\nimport blob from '../img/Path 2.svg';\r\nimport wave from '../img/Group 20.svg';\r\nimport wave2 from '../img/Group 30.svg';\r\n\r\nimport '../styles/RandomSection.sass';\r\n\r\nconst RandomSection = props => {\r\n  return (\r\n    <div id='randomSection'>\r\n      <div id='randomSectionText'>\r\n        <h2>Random pick?</h2>\r\n        <NavLink to='/today'>\r\n          <button onClick={props.btnClickFunc}>click to choose</button>\r\n        </NavLink>\r\n        <img src={kostkiNiebieskie} alt='' id='kostkiNiebieskie' />\r\n        <img src={blob} alt='' id='blob1' className='blob' />\r\n        <img src={blob} alt='' id='blob2' className='blob' />\r\n        <img src={wave} alt='' id='randomWave1' className='wave' />\r\n        <img src={wave} alt='' id='randomWave2' className='wave' />\r\n        <img src={wave2} alt='' id='randomWave3' className='wave' />\r\n        <img src={wave} alt='' id='randomWave4' className='wave' />\r\n        <img src={wave} alt='' id='randomWave5' className='wave' />\r\n        <img src={wave} alt='' id='randomWave6' className='wave' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomSection;\r\n","import React, { Component } from 'react';\r\n\r\nimport Album from './Album';\r\nimport DecadeSlider from './DecadeSlider';\r\nimport RandomSection from './RandomSection';\r\n\r\nimport blob from '../img/Path 2.svg';\r\nimport wave from '../img/Group 20.svg';\r\nimport wave2 from '../img/Group 30.svg';\r\n\r\nimport '../styles/AlbumList.sass';\r\n\r\nclass AlbumList extends Component {\r\n  state = {\r\n    search: '',\r\n    albumsSite: 1,\r\n    albumSiteListAmount: ''\r\n  };\r\n\r\n  //array of decades\r\n  timeLine = ['60s', '70s', '80s', 'show all', '90s', '00s', '10s'];\r\n\r\n  //function for choose random album to listen\r\n  handleRandomButtonClick = () => {\r\n    let albums = [...this.props.albums];\r\n    let index = Math.floor(Math.random() * albums.length);\r\n    let todaysAlbum = albums[index];\r\n    const today = (\r\n      <Album\r\n        key={1}\r\n        artist={todaysAlbum.artist}\r\n        title={todaysAlbum.title}\r\n        year={todaysAlbum.year}\r\n        cover={todaysAlbum.photoLinkSmall}\r\n        rymLink={todaysAlbum.rymLink}\r\n      />\r\n    );\r\n    window.scrollTo(window.scrollX, 920);\r\n\r\n    this.setState({\r\n      albums: today,\r\n      amount: 1,\r\n      time: ''\r\n    });\r\n  };\r\n\r\n  //function after site number click, there is 25 albums on one site\r\n  handlePaginationClick = e => {\r\n    window.scrollTo(window.scrollX, 920);\r\n    this.setState({\r\n      albumsSite: parseInt(e.target.innerHTML)\r\n    });\r\n  };\r\n\r\n  //function after arrow click in pagination, next site or earlier site\r\n  handlePaginationArrowClick = a => {\r\n    if (this.state.albumsSite > 1 && a === -1) {\r\n      this.setState({\r\n        albumsSite: this.state.albumsSite + a\r\n      });\r\n      window.scrollTo(window.scrollX, 920);\r\n    } else if (a === 1) {\r\n      if (\r\n        this.props.time === 'all' &&\r\n        this.state.albumsSite < this.props.albums.length / 25\r\n      ) {\r\n        this.setState({\r\n          albumsSite: this.state.albumsSite + a\r\n        });\r\n        window.scrollTo(window.scrollX, 920);\r\n      } else if (this.props.time !== 'all' && this.props.time !== 'today') {\r\n        let albums = this.props.albums.filter(\r\n          album =>\r\n            album.year >= this.props.time &&\r\n            album.year < parseInt(this.props.time) + 10\r\n        );\r\n        if (this.state.albumsSite < albums.length / 25) {\r\n          this.setState({\r\n            albumsSite: this.state.albumsSite + a\r\n          });\r\n          window.scrollTo(window.scrollX, 920);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //function for go to first site of albums list\r\n  resetPagination = () => {\r\n    this.setState({\r\n      time: this.props.time,\r\n      albumsSite: 1\r\n    });\r\n  };\r\n\r\n  //when we click on every decade, we reste pagination\r\n  componentDidUpdate() {\r\n    if (this.props.time !== this.state.time) {\r\n      this.resetPagination();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { albums, time } = this.props;\r\n    const { albumsSite } = this.state;\r\n    let album = [];\r\n    let amount;\r\n    let albumSiteList = [];\r\n    let albumSiteListAmount;\r\n    if (this.state.search === '') {\r\n      if (time === 'all') {\r\n        album = albums\r\n          .filter(\r\n            (album, index) =>\r\n              index >= albumsSite * 25 - 25 && index < albumsSite * 25\r\n          )\r\n          .map((album, index) => (\r\n            <Album\r\n              key={index}\r\n              artist={album.artist}\r\n              title={album.title}\r\n              year={album.year}\r\n              cover={album.photoLinkSmall}\r\n              rymLink={album.rymLink}\r\n            />\r\n          ));\r\n        amount = albums.length;\r\n      } else if (time === 'today') {\r\n        let index = Math.floor(Math.random() * albums.length);\r\n        album = albums\r\n          .filter(album => albums.indexOf(album) === index)\r\n          .map(album => (\r\n            <Album\r\n              key={albums.indexOf(album)}\r\n              artist={album.artist}\r\n              title={album.title}\r\n              year={album.year}\r\n              cover={album.photoLinkSmall}\r\n              rymLink={album.rymLink}\r\n            />\r\n          ));\r\n        amount = album.length;\r\n      } else {\r\n        album = albums\r\n          .filter(\r\n            album => album.year >= time && album.year < parseInt(time) + 10\r\n          )\r\n          .map(album => (\r\n            <Album\r\n              key={albums.indexOf(album)}\r\n              artist={album.artist}\r\n              title={album.title}\r\n              year={album.year}\r\n              cover={album.photoLinkSmall}\r\n              rymLink={album.rymLink}\r\n            />\r\n          ));\r\n        amount = album.length;\r\n\r\n        album = album.filter(\r\n          (album, index) =>\r\n            index >= albumsSite * 25 - 25 && index < albumsSite * 25\r\n        );\r\n      }\r\n    } else {\r\n      album = albums\r\n        .filter(\r\n          album =>\r\n            album.artist\r\n              .toLowerCase()\r\n              .includes(this.state.search.toLowerCase()) ||\r\n            album.title\r\n              .toLowerCase()\r\n              .includes(this.state.search.toLowerCase()) ||\r\n            album.year.toLowerCase().includes(this.state.search.toLowerCase())\r\n        )\r\n        .map(album => (\r\n          <Album\r\n            key={albums.indexOf(album)}\r\n            artist={album.artist}\r\n            title={album.title}\r\n            year={album.year}\r\n            cover={album.photoLinkSmall}\r\n            rymLink={album.rymLink}\r\n          />\r\n        ));\r\n      amount = album.length;\r\n    }\r\n    if (amount === 0) {\r\n      albumSiteListAmount = 0;\r\n    } else {\r\n      albumSiteListAmount = Math.floor(amount / 25 + 1);\r\n    }\r\n    for (let i = 1; i <= albumSiteListAmount; i++) {\r\n      albumSiteList.push(i);\r\n    }\r\n    albumSiteList = albumSiteList.map(item => (\r\n      <li\r\n        key={item}\r\n        className={item === albumsSite ? 'active' : ''}\r\n        onClick={this.handlePaginationClick}\r\n      >\r\n        {item}\r\n      </li>\r\n    ));\r\n    return (\r\n      <div>\r\n        <DecadeSlider timeArray={this.timeLine} />\r\n        <div id='albumList' className='albumList'>\r\n          {album}\r\n          <img src={blob} alt='' id='blob5' className='blob' />\r\n          <img src={wave} alt='' id='albumListWave1' className='wave' />\r\n          <img src={wave2} alt='' id='albumListWave2' className='wave' />\r\n          <img src={wave2} alt='' id='albumListWave3' className='wave' />\r\n        </div>\r\n        <div id='albumSites'>\r\n          <span onClick={() => this.handlePaginationArrowClick(-1)}>{'<'}</span>\r\n          <ul>{albumSiteList}</ul>\r\n          <span onClick={() => this.handlePaginationArrowClick(1)}>{'>'}</span>\r\n        </div>\r\n        <RandomSection btnClickFunc={this.handleRandomButtonClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlbumList;\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport AlbumList from './AlbumList';\r\n// import Footer from './Footer'\r\nimport '../styles/App.sass';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    albums: [],\r\n    randomAlbums: []\r\n  };\r\n\r\n  //fetch data from json file which is on github server\r\n  componentDidMount() {\r\n    fetch(\r\n      'https://raw.githubusercontent.com/Morswin19/my_albums_wd/master/public/data/data.json'\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          albums: data\r\n        });\r\n      });\r\n    fetch('')\r\n  }\r\n\r\n  //function with routes\r\n  allRoutes = () => {\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div className='App'>\r\n          <Header\r\n            albums={this.state.albums}\r\n            handleClick={this.handleDecadeClick}\r\n          />\r\n          <section>\r\n            <Switch>\r\n              <Route path='/60s'>\r\n                <AlbumList albums={this.state.albums} time='1960' />\r\n              </Route>\r\n              <Route path='/70s'>\r\n                <AlbumList albums={this.state.albums} time='1970' />\r\n              </Route>\r\n              <Route path='/80s'>\r\n                <AlbumList albums={this.state.albums} time='1980' />\r\n              </Route>\r\n              <Route path='/90s'>\r\n                <AlbumList albums={this.state.albums} time='1990' />\r\n              </Route>\r\n              <Route path='/00s'>\r\n                <AlbumList albums={this.state.albums} time='2000' />\r\n              </Route>\r\n              <Route path='/10s'>\r\n                <AlbumList albums={this.state.albums} time='2010' />\r\n              </Route>\r\n              <Route path='/today'>\r\n                <AlbumList albums={this.state.albums} time='today' />\r\n              </Route>\r\n              <Route path='/' exact>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n              <Route>\r\n                <AlbumList albums={this.state.albums} time='all' />\r\n              </Route>\r\n            </Switch>\r\n          </section>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <>{this.allRoutes()}</>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}